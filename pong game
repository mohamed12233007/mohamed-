#first we import turtle
import turtle

wind = turtle.Screen()#make screen
# wind.title("ping pong by die Gewinners")set title of the window
wind.bgcolor("black")#set the bg color to black
wind.setup(width = 800, height =600)#set the measurements of the screen
wind.tracer(0)#stop the win from updating automaticly




    
# madrab1

madrab1 = turtle.Turtle()# makes turtle object
madrab1.speed(0)#set the speed
madrab1.shape("square")#set el shape
madrab1.shapesize(stretch_wid=5, stretch_len= 1)#strech el madrab 
madrab1.color("blue")#set el color
madrab1.penup()#stops the drawing lines 
madrab1.goto(-350, 0)#set the position

# madrab2
madrab2= turtle.Turtle()# makes turtle object
madrab2.speed(0)#set the speed
madrab2.shape("square")#set el shape
madrab2.shapesize(stretch_wid=5, stretch_len= 1)#strech el madrab 
madrab2.color("red")#set el color
madrab2.penup()#stops the drawing lines 
madrab2.goto(350, 0)#set the position


#ball
ball = turtle.Turtle()# makes turtle object
ball.speed(0)#set the speed
ball.shape("circle")#set el shape

ball.color("white")#set el color
ball.penup()#stops the drawing lines 
ball.goto(0, 0)#set the position
ball.dx= 0.5
ball.dy= 0.5


#score
score1=0
score2=0
score=turtle.Turtle()
score.speed(0)
score.color("white")
score.penup()
score.hideturtle()
score.goto(0,260)
score.write("player1 :0   player2 :0",align="center", font=("courier",24,"normal"))

#functions 


def madrab1_up():
    y=madrab1.ycor() #get y the y of the madrab1
    y+=20 #set the y to increase be 20
    madrab1.sety(y) #set the y of the madrab1 to the new y coordinate


def madrab1_down():
    y=madrab1.ycor()
    y-=20 #set the y to decrease be 20
    madrab1.sety(y)

def madrab2_up():
    y=madrab2.ycor()
    y+=20
    madrab2.sety(y) 


def madrab2_down():
    y=madrab2.ycor()
    y-=20
    madrab2.sety(y)   


#keyboard bindings

wind.listen() #tell the window to expect keyboard input
wind.onkeypress(madrab1_up, "w")#when pressing w the function madrab1_up isinvoked
wind.onkeypress(madrab1_down, "s")
wind.onkeypress(madrab2_up, "Up")
wind.onkeypress(madrab2_down, "Down")
#main game loop

while True:
    wind.update()#updates the screen when we run the code

    #move the ball
    ball.setx(ball.xcor()+ball.dx)#ball strats at 0 and everytime loops run---->+2.5 xaxis
    ball.sety(ball.ycor()+ball.dy)#ball strats at 0 and everytime loops run---->+2.5 xaxis

    #border check , top border +300px , bottom border -300px ,ball is 20 px 
    if ball.ycor()>290: #if ball is at top border
        ball.sety(290) #set y coordinate +290
        ball.dy *= -1 #rerverse direction , making + 2.5 ----->-2.5

    if ball.ycor()<-290: # if ball is at bottom border
        ball.sety(-290)  
        ball.dy *= -1

    if ball.xcor() >390: # if ball is at right border
        ball.goto(0,0) #return ball to center
        ball.dx *=-1 #reverse the x direction
        score1+=1
        score.clear()
        score.write("player1 :{}   player2 :{}".format(score1,score2),align="center", font=("courier",24,"normal"))
    if ball.xcor() <-390: # if ball is at left border
        ball.goto(0,0)
        ball.dx *=-1
        score2+=1
        score.clear()
        score.write("player1 :{}   player2 :{}".format(score1,score2),align="center", font=("courier",24,"normal"))
    #tasadom madrab and ball

    if (ball.xcor()>340 and ball.xcor()<350)and(ball.ycor()<madrab2.ycor()+40 and ball.ycor()> madrab2.ycor()-40):
        ball.setx(340)
        ball.dx*=-1

    
    if (ball.xcor()<-340 and ball.xcor()>-350)and(ball.ycor()<madrab1.ycor()+40 and ball.ycor()> madrab1.ycor()-40):
        ball.setx(-340)
        ball.dx*=-1





